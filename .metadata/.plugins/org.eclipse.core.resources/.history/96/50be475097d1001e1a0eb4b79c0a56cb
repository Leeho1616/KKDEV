package com.webapp.service;

import java.sql.Date;
import java.util.List;

import org.springframework.stereotype.Service;

import com.webapp.model.UsersModel;
import com.webapp.repository.UsersRepository;

@Service
public class UsersService {
    // Constructor Autowired
    private final UsersRepository usersRepository;

    public UsersService(UsersRepository usersRepository) {
        super();
        this.usersRepository = usersRepository;
    }

    // registerUser Method: 新規ユーザー登録のため
    public UsersModel registerUser(String firstname_hina, String lastname_hina, String firstname_kata, String lastname_kata, String email, String password, Date birthday, String address1, String address2, String address3, String nationality, String sex ) {
        if (email == null || password == null) {
            return null;
        } else {
            if (usersRepository.findFirstByEmail(email).isPresent()) {
                System.out.println("Duplicate email");
                return null; // Return null if the login is duplicate
            }
            UsersModel usersModel = new UsersModel();
            usersModel.setFirstname_hina(firstname_hina);
            usersModel.setLastname_hina(lastname_hina);
            usersModel.setFirstname_kata(firstname_kata);
            usersModel.setLastname_kata(lastname_kata);
            usersModel.setEmail(email);
            usersModel.setPassword(password);
            usersModel.setBirthday(birthday);
            usersModel.setAddress1(address1);
            usersModel.setAddress2(address2);
            usersModel.setAddress3(address3);
            usersModel.setNationality(nationality);
            usersModel.setSex(sex);
            

            // Save the user to the repository
            return usersRepository.save(usersModel);
        }
    }

    public UsersModel authenticate(String email, String password) {
        return usersRepository.findByEmailAndPassword(email, password).orElse(null);
    }
    
    public List<UsersModel> getAllUserInfos() {
		return usersRepository.findAll();
	}
}
